name: production

services:
  api:
    tty: true
    stdin_open: true
    restart: unless-stopped
    build:
      context: ../../
      dockerfile: ./ops/docker/Dockerfile
      target: runner-production
    environment:
      PORT: 8080
      ENV: production
      LOG__PRETTY: false
      # Database connection with both protocol and DSN
      CONN__targets__default__protocol: postgres
      CONN__targets__default__dsn: ${DATABASE_URL:-postgres://postgres:s3cr3t@postgres:5432/postgres?sslmode=disable}
      # Arcade API configuration
      EXTERNALS__arcade__apikey: ${ARCADE_API_KEY:-}
    networks:
      - aya-is-network
    ports:
      - 8080:8080
    depends_on:
      - postgres

  postgres:
    image: postgres:16-bookworm
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: s3cr3t
    healthcheck:
      test: ["CMD-SHELL", "psql -U 'postgres' -c '\\q'"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - aya-is-network
    ports:
      - 5435:5432

networks:
  aya-is-network:
    driver: bridge
